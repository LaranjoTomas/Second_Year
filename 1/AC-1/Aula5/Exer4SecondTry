# Mapa de registos
# i: $t0
# lista: $t1
# lista + i: $t2
# houve_troca: $t4
# p: $t5
# pUltimo: $t6
    .eqv    SIZE, 10
    .eqv    TRUE, 1
    .eqv    FALSE, 0
    .eqv    PRINT_INT10, 1
    .eqv    PRINT_STR, 4
    .eqv    READ_INT, 5
    
    .data
    
str:    .asciiz    "\nIntroduza um numero: "
str1:    .asciiz    "\nConteudo do array:\n"
str2:    .asciiz "; "
    .align    2
lista:    .space    40

    .text
    .globl    main
    

main:
    li    $t0, 0            # i = 0
    
while:
    bge    $t0, SIZE, endw
    
    li    $v0, PRINT_STR
    la    $a0, str
    syscall                # print_str('...')
    
    li    $v0, READ_INT
    syscall                # read_int
    
    la    $t1, lista        # $t1 = lista
    sll    $t2, $t0, 2
    addu    $t2, $t1, $t2
    
    sw    $v0, 0($t2)
    addi    $t0, $t0, 1        # i++
    
    j    while
    

do:
    li    $t4, FALSE        # houve_troca = false
    la    $t5, lista        # $t5 = lista[0]
    li    $t6, SIZE        # $t6 = SIZE
    subu    $t6, $t6, 1        # $t6 = SIZE - 1
    sll    $t6, $t6, 2        # $t6 = (SIZE - 1) * 4
    addu    $t6, $t5, $t6        # $t6 = lista + (SIZE - 1)
for:    
    bge    $t5, $t6, efor
if:
    lw    $t7, 0($t5)        # $t7 = *p
    lw    $t8, 4($t5)        # $t8 = *(p+1)
    
    ble    $t7, $t8, endif
    
    sw    $t7, 4($t5)        # *p = *(p+1)
    sw    $t8, 0($t5)        # *(p+1) = *p
    li    $t4, TRUE    
    
    j    endif    
    
endif:
    addiu    $t5, $t5, 4
    j    for    
    
efor:
    bne    $t4, TRUE, edo
    j    do
    
edo:
    li    $v0, PRINT_STR
    la    $a0, str1
    syscall                # print_string('...')
    
    la    $t0, lista        # q = lista
    li    $t2, SIZE
    sll    $t2, $t2, 2
    addu    $t2, $t0, $t2        # $t2 = lista + SIZE
    
while1:
    bgeu    $t0, $t2, ewhile1
    lw    $t1, 0($t0)        # $t1 = *q

    li    $v0, PRINT_INT10
    move    $a0, $t1
    syscall                # print_int10( *q )
    
    li    $v0, PRINT_STR
    la    $a0, str2
    syscall                # print_string('...')
    
    addiu    $t0, $t0, 4
    
    j    while1
ewhile1:
    jr    $ra
